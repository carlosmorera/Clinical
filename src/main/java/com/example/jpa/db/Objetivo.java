package com.example.jpa.db;
// Generated Sep 15, 2017 11:44:15 PM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.Date;
import java.util.Objects;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Objetivo generated by hbm2java
 */
@Entity
@Table(name = "objetivos",
        catalog = "clinical"
)
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})

public class Objetivo implements java.io.Serializable {

    private Long objetivoId;
    private Person persons;
    private String area;
    private String subarea;
    private String nombreObjetivo;
    private String puntuacion;
    private Date date;
    private String nombreTerapeuta;

    public Objetivo() {
    }

    public Objetivo(Person persons, String area, String subarea, String nombreObjetivo, String puntuacion, Date date, String nombreTerapeuta) {
        this.persons = persons;
        this.area = area;
        this.subarea = subarea;
        this.nombreObjetivo = nombreObjetivo;
        this.puntuacion = puntuacion;
        this.date = date;
        this.nombreTerapeuta = nombreTerapeuta;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "objetivo_id", unique = true, nullable = false)
    public Long getObjetivoId() {
        return this.objetivoId;
    }

    public void setObjetivoId(Long objetivoId) {
        this.objetivoId = objetivoId;
    }

    @JsonIgnore
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "persons_id", nullable = false)
    public Person getPersons() {
        return this.persons;
    }

    public void setPersons(Person persons) {
        this.persons = persons;
    }

    @Column(name = "area", nullable = false, length = 65535)
    public String getArea() {
        return this.area;
    }

    public void setArea(String area) {
        this.area = area;
    }

    @Column(name = "subarea", nullable = false, length = 65535)
    public String getSubarea() {
        return this.subarea;
    }

    public void setSubarea(String subarea) {
        this.subarea = subarea;
    }

    @Column(name = "nombre_objetivo", nullable = false, length = 65535)
    public String getNombreObjetivo() {
        return this.nombreObjetivo;
    }

    public void setNombreObjetivo(String nombreObjetivo) {
        this.nombreObjetivo = nombreObjetivo;
    }

    @Column(name = "puntuacion", nullable = false, length = 65535)
    public String getPuntuacion() {
        return this.puntuacion;
    }

    public void setPuntuacion(String puntuacion) {
        this.puntuacion = puntuacion;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "date", nullable = false, length = 10)
    public Date getDate() {
        return this.date;
    }

    public void setDate(Date date) {
        this.date = date;
    }

    @Column(name = "nombre_terapeuta", nullable = false, length = 65535)
    public String getNombreTerapeuta() {
        return this.nombreTerapeuta;
    }

    public void setNombreTerapeuta(String nombreTerapeuta) {
        this.nombreTerapeuta = nombreTerapeuta;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 23 * hash + Objects.hashCode(this.persons);
        hash = 23 * hash + Objects.hashCode(this.area);
        hash = 23 * hash + Objects.hashCode(this.subarea);
        hash = 23 * hash + Objects.hashCode(this.nombreObjetivo);
        hash = 23 * hash + Objects.hashCode(this.puntuacion);
        hash = 23 * hash + Objects.hashCode(this.date);
        hash = 23 * hash + Objects.hashCode(this.nombreTerapeuta);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Objetivo other = (Objetivo) obj;
        if (!Objects.equals(this.area, other.area)) {
            return false;
        }
        if (!Objects.equals(this.subarea, other.subarea)) {
            return false;
        }
        if (!Objects.equals(this.nombreObjetivo, other.nombreObjetivo)) {
            return false;
        }
        if (!Objects.equals(this.persons, other.persons)) {
            return false;
        }
        if (!Objects.equals(this.date, other.date)) {
            return false;
        }
        return true;
    }

}
